@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@300;400;500;600;700&display=swap');

* {
  box-sizing: border-box;
}

body {
  font-family: 'Inter', ui-sans-serif, system-ui, -apple-system, sans-serif;
  line-height: 1.6;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #1f2937;
}

::-webkit-scrollbar-thumb {
  background: #4b5563;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #6b7280;
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

/* Monaco Editor overrides */
.monaco-editor {
  background-color: rgba(17, 24, 39, 0.95) !important;
}

.monaco-editor .margin {
  background-color: rgba(17, 24, 39, 0.95) !important;
}

.monaco-editor .current-line {
  background-color: rgba(255, 20, 147, 0.1) !important;
}

.monaco-editor .line-numbers {
  color: rgba(255, 105, 180, 0.6) !important;
}

.monaco-editor .cursor {
  color: #ff1493 !important;
}

/* Custom syntax highlighting for brainrot theme */
.monaco-editor .mtk1 { color: #e5e7eb !important; } /* Default text */
.monaco-editor .mtk2 { color: #ff1493 !important; } /* Keywords */
.monaco-editor .mtk3 { color: #00ffff !important; } /* Strings */
.monaco-editor .mtk4 { color: #39ff14 !important; } /* Comments */
.monaco-editor .mtk5 { color: #ffff00 !important; } /* Numbers */
.monaco-editor .mtk6 { color: #ff6900 !important; } /* Functions */
.monaco-editor .mtk7 { color: #c71585 !important; } /* Types */

/* Ensure text is always visible */
.text-shadow {
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
}

/* Neon glow effects */
.neon-glow {
  text-shadow: 0 0 5px currentColor, 0 0 10px currentColor, 0 0 15px currentColor;
}

.neon-border {
  box-shadow: 0 0 5px currentColor, 0 0 10px currentColor, inset 0 0 5px currentColor;
}

/* Animation keyframes */
@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

/* Chaotic mesh background animation */
@keyframes mesh-move {
  0% { transform: translate(0, 0) rotate(0deg); }
  25% { transform: translate(100px, -50px) rotate(90deg); }
  50% { transform: translate(-50px, 100px) rotate(180deg); }
  75% { transform: translate(-100px, -100px) rotate(270deg); }
  100% { transform: translate(0, 0) rotate(360deg); }
}

@keyframes mesh-pulse {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.7; }
}

@keyframes mesh-scale {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.2); }
}

.mesh-bg {
  background: 
    radial-gradient(circle at 20% 80%, rgba(255, 20, 147, 0.4) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(255, 0, 255, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(255, 105, 180, 0.2) 0%, transparent 50%),
    radial-gradient(circle at 60% 60%, rgba(199, 21, 133, 0.3) 0%, transparent 50%),
    linear-gradient(135deg, rgba(255, 20, 147, 0.1) 0%, rgba(138, 43, 226, 0.1) 100%);
  animation: mesh-pulse 4s ease-in-out infinite;
}

.mesh-overlay {
  background: 
    repeating-linear-gradient(
      45deg,
      transparent,
      transparent 2px,
      rgba(255, 20, 147, 0.05) 2px,
      rgba(255, 20, 147, 0.05) 4px
    ),
    repeating-linear-gradient(
      -45deg,
      transparent,
      transparent 2px,
      rgba(255, 0, 255, 0.03) 2px,
      rgba(255, 0, 255, 0.03) 4px
    );
  animation: mesh-move 20s linear infinite;
}